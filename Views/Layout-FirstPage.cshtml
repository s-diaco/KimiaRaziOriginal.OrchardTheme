@using Orchard.Localization
@functions {
    // To support the layout classifaction below. Implementing as a razor function because we can, could otherwise be a Func<string[], string, string> in the code block following.
    string CalcuClassify(string[] zoneNames, string classNamePrefix)
    {
        var zoneCounter = 0;
        var zoneNumsFilled = string.Join("", zoneNames.Select(zoneName => { ++zoneCounter; return Model[zoneName] != null ? zoneCounter.ToString() : ""; }).ToArray());
        return HasText(zoneNumsFilled) ? classNamePrefix + zoneNumsFilled : "";
    }
}
@{
    /* Global includes for the theme
    ***************************************************************/

    SetMeta(httpEquiv: "X-UA-Compatible", content: "IE=edge,chrome=1");
    Style.Require("Bootstrap");
    Style.Include("grayscale.css");
    Style.Include("stylish-portfolio.css");
    Style.Include("kimiarazi.css");
    Style.Include("Animate");
    Style.Require("FontAwesome");
    if (WorkContext.CurrentCultureInfo().TextInfo.IsRightToLeft)
    {
        Style.Include("kimiarazi-rtl.css");
    }
    else
    {
        Style.Require("Font_Lora");
        Style.Require("Font_Montserrat");
    }
    Script.Require("jQuery"); // Renders jquery at the buttom of the pages.
    Script.Require("Bootstrap");
    Script.Require("jQueryEasing");
    Script.Require("jQueryViewportChecker");
    Script.Include("ticker00.js");
    Script.Include("grayscale.js");
    using (Script.Foot())
    {
        <!-- animated scroll loading effect -->
        <script type="text/javascript">
            jQuery(document).ready(function () {
                jQuery('.post').addClass("invisible").viewportChecker({
                    classToAdd: 'visible animated fadeInUp',
                    offset: 100
                });
            });
        </script>
        <!-- Parallax effect
        @@Scripts.Render("~/Scripts/init.js") -->
        <!-- Page Loading -->
        <script>
            $(window).load(function () {
                document.getElementById("loading").style.display = "none";
            })
        </script>
        <!-- End Page Loading -->
        <!-- Ticker effect -->
        <script type="text/javascript">
            $(document).ready(function () {
                $('#fade').list_ticker({
                    speed: 20000,
                    effect: 'fade'
                });
            })
        </script>

        <!-- google analytics -->
        <script>
            (function (i, s, o, g, r, a, m) {
            i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {
                (i[r].q = i[r].q || []).push(arguments)
            }, i[r].l = 1 * new Date(); a = s.createElement(o),
                m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m)
            })(window, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga');

        ga('create', 'UA-78763476-1', 'auto');
        ga('send', 'pageview');

        </script>
    }

    /* Some useful shortcuts or settings
    ***************************************************************/

    Func<dynamic, dynamic> Zone = x => Display(x); // Zone as an alias for Display to help make it obvious when we're displaying zones

    /* Layout classification based on filled zones
    ***************************************************************/

    //Add classes to the wrapper div to toggle aside widget zones on and off
    var asideClass = CalcuClassify(new[] { "AsideFirst", "AsideSecond" }, "aside-"); // for aside-1, aside-2 or aside-12 if any of the aside zones are filled
    if (HasText(asideClass))
    {
        Model.Classes.Add(asideClass);
    }

    //Add classes to the wrapper div to toggle tripel widget zones on and off
    var tripelClass = CalcuClassify(new[] { "TripelFirst", "TripelSecond", "TripelThird" }, "tripel-"); // for tripel-1, triple-2, etc. if any of the tripel zones are filled
    if (HasText(tripelClass))
    {
        Model.Classes.Add(tripelClass);
    }

    //Add classes to the wrapper div to toggle quad widget zones on and off
    var footerQuadClass = CalcuClassify(new[] { "FooterQuadFirst", "FooterQuadSecond", "FooterQuadThird", "FooterQuadFourth" }, "split-"); // for quad-1, quad-2, etc. if any of the quad zones are filled
    if (HasText(footerQuadClass))
    {
        Model.Classes.Add(footerQuadClass);
    }

    /* Inserting some ad hoc shapes
    ***************************************************************/

    // WorkContext.Layout.Header.Add(New.Branding(), "5"); // Site name and link to the home page
    WorkContext.Layout.Footer.Add(New.BadgeOfHonor(), "5"); // Powered by Orchard
    WorkContext.Layout.Footer.Add(New.User(), "10"); // Login and dashboard links

    WorkContext.Layout.Head.Add(New.InlineStyle(), "10");

    /* Last bit of code to prep the layout wrapper
    ***************************************************************/

    Model.Id = "layout-wrapper";
    var tag = Tag(Model, "div"); // using Tag so the layout div gets the classes, id and other attributes added to the Model
}
<!-- Loading div -->
<div id="loading">
    <div id="loading-center">
        <div id="loading-center-absolute">
            <div id="object">
                <h4 id="loading-h1" data-text="It's loading…">It's loading…</h4>
            </div>
            <div class="loader"></div>
        </div>
    </div>
</div>
<!-- End Loading div -->
@if (Model.Header != null)
{
    <header id="layout-header" class="group">
        <div id="header">
            @Zone(Model.Header)
        </div>
    </header>
}
@if (Model.Navigation != null)
{
    @Zone(Model.Navigation)
}
@if (Model.Featured != null)
{
    <div id="layout-featured" class="group">
        @Zone(Model.Featured)
    </div>
}
@if (Model.BeforeMain != null)
{
    <div id="layout-before-main" class="group">
        @Zone(Model.BeforeMain)
    </div>
}
@if (Model.AsideFirst != null)
{
    <aside id="aside-first" class="aside-first group">
        @Zone(Model.AsideFirst)
    </aside>
}
@if (Model.Messages != null)
{
    <div id="messages">
        @Zone(Model.Messages)
    </div>
}
@if (Model.BeforeContent != null)
{
    <div id="before-content">
        @Zone(Model.BeforeContent)
    </div>
}
@* the model content for the page is in the Content zone @ the default position (nothing, zero, zilch) *@
@if (Model.Content != null)
{
    @Zone(Model.Content)
}
@if (Model.AfterContent != null)
{
    <div id="after-content">
        @Zone(Model.AfterContent)
    </div>
}
@if (Model.AsideSecond != null)
{
    <aside id="aside-second" class="aside-second">
        @Zone(Model.AsideSecond)
    </aside>
}
@if (Model.AfterMain != null)
{
    <div id="layout-after-main" class="group">
        @Zone(Model.AfterMain)
    </div>
}
@if (Model.TripelFirst != null || Model.TripelSecond != null || Model.TripelThird != null)
{
    <div id="layout-tripel-container">
        <div id="layout-tripel" class="group">
            @* as in beer *@
        @if (Model.TripelFirst != null)
        {
            <div id="tripel-first">
                @Zone(Model.TripelFirst)
            </div>
        }
        @if (Model.TripelSecond != null)
        {
            <div id="tripel-second">
                @Zone(Model.TripelSecond)
            </div>
        }
        @if (Model.TripelThird != null)
        {
            <div id="tripel-third">
                @Zone(Model.TripelThird)
            </div>
        }
    </div>
</div>
}
<!-- Footer Section -->
<footer id="footer">
    @if (Model.FooterQuadFirst != null)
    {
        <div id="footer-quad-first">
            @Zone(Model.FooterQuadFirst)
        </div>
    }
    @if (Model.FooterQuadSecond != null)
    {
        <div id="footer-quad-second">
            @Zone(Model.FooterQuadSecond)
        </div>
    }
    @if (Model.FooterQuadThird != null)
    {
        <div id="footer-quad-third">
            @Zone(Model.FooterQuadThird)
        </div>
    }
    @if (Model.FooterQuadFourth != null)
    {
        <div id="footer-quad-fourth">
            @Zone(Model.FooterQuadFourth)
        </div>
    }
    @if (Model.Footer != null)
    {
        <div class="container">
            <div class="row">
                <div class="col-md-4">
                    @{
                        var clock = WorkContext.Resolve<Orchard.Services.IClock>();
                    }
                    <span class="copyright">@T("Copyright &copy; KimiaRazi {0}", clock.UtcNow.Year)</span>
                </div>
                <div class="col-md-4">
                    <ul class="list-inline social-buttons">
                        <li>
                            <a href="~/" title="Home"><i class="fa fa-home"></i></a>
                        </li>
                        <li>
                            <a href='@Url.Action("Contact", "Home")' title=@T("Contact us")><i class="fa fa-envelope"></i></a>
                        </li>
                        <li>
                            <a href="#page-top" title="Top"><i class="fa fa-arrow-up"></i></a>
                        </li>
                    </ul>
                </div>
                <div class="col-md-4">
                    <span class="copyright">@T("All Rights Reserved.")</span>
                </div>
            </div>
        </div>
    }
</footer>
<!-- End of Footer Section -->